# Compiler: llvm/clang 15
# Use llvm/clang installed from homebrew (brew install llvm), Apple-shipped clang will not correctly link OpenMP
CC = /opt/homebrew/opt/llvm/bin/clang++ -std=c++17
RM = rm

BIN_DIR = bin
SRC_DIR = src

OCL_INC = -IKhronos
OCL_LIB = -framework OpenCL

BOINC_DIR = ../boinc
BOINC_INC = -I$(BOINC_DIR) -I$(BOINC_DIR)/api -I$(BOINC_DIR)/lib
BOINC_LIB = -L$(BOINC_DIR)/api -L$(BOINC_DIR)/lib -lboinc_api -lboinc -lpthread
BOINC_LIB_OCL = -lboinc_opencl

#CFLAGS = -DBOINC $(BOINC_INC) -Wall -Wextra -Wsign-conversion -ffinite-math-only -frename-registers
CFLAGS = -Wall -Wextra -Wsign-conversion -ffinite-math-only -frename-registers -I/opt/homebrew/opt/gmp/include -L/opt/homebrew/opt/gmp/lib
FLAGS_CPU = -O3 -fopenmp -I/opt/homebrew/opt/gmp/include -L/opt/homebrew/opt/gmp/lib -L/opt/homebrew/opt/libomp/lib -I/opt/homebrew/opt/libomp/include
FLAGS_GPU = -O3 -DGPU -I/opt/homebrew/opt/gmp/include -L/opt/homebrew/opt/gmp/lib

OBJS_CPU = main.o transform_neon.o
OBJS_GPU = maing.o transform_ocl.o
DEPS_COMMON = $(SRC_DIR)/transform.h $(SRC_DIR)/file.h $(SRC_DIR)/gint.h $(SRC_DIR)/pio.h $(SRC_DIR)/boinc.h
DEPS_MAIN = $(SRC_DIR)/genefer.h $(SRC_DIR)/timer.h $(DEPS_COMMON)
DEPS_TRANSFORM_CPUf64 = $(SRC_DIR)/transformCPUf64.h $(SRC_DIR)/fp16_80.h $(DEPS_COMMON)
DEPS_TRANSFORM_GPU = $(SRC_DIR)/transformGPU.h $(SRC_DIR)/ocl.h $(DEPS_COMMON)

EXEC_CPU = $(BIN_DIR)/genefer22_arm64_AppleM
EXEC_GPU = $(BIN_DIR)/genefer22g_arm64_AppleM

.PHONY: all clean_obj rebuild

all: $(EXEC_CPU) $(EXEC_GPU)

clean_obj:
	$(RM) $(OBJS_CPU) $(OBJS_GPU)

rebuild: clean_obj all

main.o: $(SRC_DIR)/main.cpp $(DEPS_MAIN)
	$(CC) $(CFLAGS) $(FLAGS_CPU) -c $< -o $@

maing.o: $(SRC_DIR)/main.cpp $(DEPS_MAIN)
	$(CC) $(CFLAGS) $(FLAGS_GPU) $(OCL_INC) -c $< -o $@

transform_neon.o: $(SRC_DIR)/transform_neon.cpp $(DEPS_TRANSFORM_CPUf64)
	$(CC) $(CFLAGS) $(FLAGS_CPU) -fprefetch-loop-arrays -c $< -o $@

transform_ocl.o: $(SRC_DIR)/transform_ocl.cpp $(DEPS_TRANSFORM_GPU)
	$(CC) $(CFLAGS) $(FLAGS_GPU) $(OCL_INC) -c $< -o $@

$(EXEC_CPU): $(OBJS_CPU)
	$(CC) $(FLAGS_CPU) $^ -lgmp $(BOINC_LIB) -o $@

$(EXEC_GPU): $(OBJS_GPU)
	$(CC) $(FLAGS_GPU) $^ -lgmp $(BOINC_LIB) $(BOINC_LIB_OCL) $(OCL_LIB) -o $@
